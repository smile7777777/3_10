                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module lcdlib
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _cactus
                                     12 	.globl _dinosaur
                                     13 	.globl _CY
                                     14 	.globl _AC
                                     15 	.globl _F0
                                     16 	.globl _RS1
                                     17 	.globl _RS0
                                     18 	.globl _OV
                                     19 	.globl _F1
                                     20 	.globl _P
                                     21 	.globl _PS
                                     22 	.globl _PT1
                                     23 	.globl _PX1
                                     24 	.globl _PT0
                                     25 	.globl _PX0
                                     26 	.globl _RD
                                     27 	.globl _WR
                                     28 	.globl _T1
                                     29 	.globl _T0
                                     30 	.globl _INT1
                                     31 	.globl _INT0
                                     32 	.globl _TXD
                                     33 	.globl _RXD
                                     34 	.globl _P3_7
                                     35 	.globl _P3_6
                                     36 	.globl _P3_5
                                     37 	.globl _P3_4
                                     38 	.globl _P3_3
                                     39 	.globl _P3_2
                                     40 	.globl _P3_1
                                     41 	.globl _P3_0
                                     42 	.globl _EA
                                     43 	.globl _ES
                                     44 	.globl _ET1
                                     45 	.globl _EX1
                                     46 	.globl _ET0
                                     47 	.globl _EX0
                                     48 	.globl _P2_7
                                     49 	.globl _P2_6
                                     50 	.globl _P2_5
                                     51 	.globl _P2_4
                                     52 	.globl _P2_3
                                     53 	.globl _P2_2
                                     54 	.globl _P2_1
                                     55 	.globl _P2_0
                                     56 	.globl _SM0
                                     57 	.globl _SM1
                                     58 	.globl _SM2
                                     59 	.globl _REN
                                     60 	.globl _TB8
                                     61 	.globl _RB8
                                     62 	.globl _TI
                                     63 	.globl _RI
                                     64 	.globl _P1_7
                                     65 	.globl _P1_6
                                     66 	.globl _P1_5
                                     67 	.globl _P1_4
                                     68 	.globl _P1_3
                                     69 	.globl _P1_2
                                     70 	.globl _P1_1
                                     71 	.globl _P1_0
                                     72 	.globl _TF1
                                     73 	.globl _TR1
                                     74 	.globl _TF0
                                     75 	.globl _TR0
                                     76 	.globl _IE1
                                     77 	.globl _IT1
                                     78 	.globl _IE0
                                     79 	.globl _IT0
                                     80 	.globl _P0_7
                                     81 	.globl _P0_6
                                     82 	.globl _P0_5
                                     83 	.globl _P0_4
                                     84 	.globl _P0_3
                                     85 	.globl _P0_2
                                     86 	.globl _P0_1
                                     87 	.globl _P0_0
                                     88 	.globl _B
                                     89 	.globl _ACC
                                     90 	.globl _PSW
                                     91 	.globl _IP
                                     92 	.globl _P3
                                     93 	.globl _IE
                                     94 	.globl _P2
                                     95 	.globl _SBUF
                                     96 	.globl _SCON
                                     97 	.globl _P1
                                     98 	.globl _TH1
                                     99 	.globl _TH0
                                    100 	.globl _TL1
                                    101 	.globl _TL0
                                    102 	.globl _TMOD
                                    103 	.globl _TCON
                                    104 	.globl _PCON
                                    105 	.globl _DPH
                                    106 	.globl _DPL
                                    107 	.globl _SP
                                    108 	.globl _P0
                                    109 	.globl _LCD_set_symbol_PARM_2
                                    110 	.globl _lcd_ready
                                    111 	.globl _LCD_ready
                                    112 	.globl _LCD_Init
                                    113 	.globl _LCD_IRWrite
                                    114 	.globl _LCD_functionSet
                                    115 	.globl _LCD_write_char
                                    116 	.globl _LCD_write_string
                                    117 	.globl _delay
                                    118 	.globl _LCD_set_symbol
                                    119 ;--------------------------------------------------------
                                    120 ; special function registers
                                    121 ;--------------------------------------------------------
                                    122 	.area RSEG    (ABS,DATA)
      000000                        123 	.org 0x0000
                           000080   124 _P0	=	0x0080
                           000081   125 _SP	=	0x0081
                           000082   126 _DPL	=	0x0082
                           000083   127 _DPH	=	0x0083
                           000087   128 _PCON	=	0x0087
                           000088   129 _TCON	=	0x0088
                           000089   130 _TMOD	=	0x0089
                           00008A   131 _TL0	=	0x008a
                           00008B   132 _TL1	=	0x008b
                           00008C   133 _TH0	=	0x008c
                           00008D   134 _TH1	=	0x008d
                           000090   135 _P1	=	0x0090
                           000098   136 _SCON	=	0x0098
                           000099   137 _SBUF	=	0x0099
                           0000A0   138 _P2	=	0x00a0
                           0000A8   139 _IE	=	0x00a8
                           0000B0   140 _P3	=	0x00b0
                           0000B8   141 _IP	=	0x00b8
                           0000D0   142 _PSW	=	0x00d0
                           0000E0   143 _ACC	=	0x00e0
                           0000F0   144 _B	=	0x00f0
                                    145 ;--------------------------------------------------------
                                    146 ; special function bits
                                    147 ;--------------------------------------------------------
                                    148 	.area RSEG    (ABS,DATA)
      000000                        149 	.org 0x0000
                           000080   150 _P0_0	=	0x0080
                           000081   151 _P0_1	=	0x0081
                           000082   152 _P0_2	=	0x0082
                           000083   153 _P0_3	=	0x0083
                           000084   154 _P0_4	=	0x0084
                           000085   155 _P0_5	=	0x0085
                           000086   156 _P0_6	=	0x0086
                           000087   157 _P0_7	=	0x0087
                           000088   158 _IT0	=	0x0088
                           000089   159 _IE0	=	0x0089
                           00008A   160 _IT1	=	0x008a
                           00008B   161 _IE1	=	0x008b
                           00008C   162 _TR0	=	0x008c
                           00008D   163 _TF0	=	0x008d
                           00008E   164 _TR1	=	0x008e
                           00008F   165 _TF1	=	0x008f
                           000090   166 _P1_0	=	0x0090
                           000091   167 _P1_1	=	0x0091
                           000092   168 _P1_2	=	0x0092
                           000093   169 _P1_3	=	0x0093
                           000094   170 _P1_4	=	0x0094
                           000095   171 _P1_5	=	0x0095
                           000096   172 _P1_6	=	0x0096
                           000097   173 _P1_7	=	0x0097
                           000098   174 _RI	=	0x0098
                           000099   175 _TI	=	0x0099
                           00009A   176 _RB8	=	0x009a
                           00009B   177 _TB8	=	0x009b
                           00009C   178 _REN	=	0x009c
                           00009D   179 _SM2	=	0x009d
                           00009E   180 _SM1	=	0x009e
                           00009F   181 _SM0	=	0x009f
                           0000A0   182 _P2_0	=	0x00a0
                           0000A1   183 _P2_1	=	0x00a1
                           0000A2   184 _P2_2	=	0x00a2
                           0000A3   185 _P2_3	=	0x00a3
                           0000A4   186 _P2_4	=	0x00a4
                           0000A5   187 _P2_5	=	0x00a5
                           0000A6   188 _P2_6	=	0x00a6
                           0000A7   189 _P2_7	=	0x00a7
                           0000A8   190 _EX0	=	0x00a8
                           0000A9   191 _ET0	=	0x00a9
                           0000AA   192 _EX1	=	0x00aa
                           0000AB   193 _ET1	=	0x00ab
                           0000AC   194 _ES	=	0x00ac
                           0000AF   195 _EA	=	0x00af
                           0000B0   196 _P3_0	=	0x00b0
                           0000B1   197 _P3_1	=	0x00b1
                           0000B2   198 _P3_2	=	0x00b2
                           0000B3   199 _P3_3	=	0x00b3
                           0000B4   200 _P3_4	=	0x00b4
                           0000B5   201 _P3_5	=	0x00b5
                           0000B6   202 _P3_6	=	0x00b6
                           0000B7   203 _P3_7	=	0x00b7
                           0000B0   204 _RXD	=	0x00b0
                           0000B1   205 _TXD	=	0x00b1
                           0000B2   206 _INT0	=	0x00b2
                           0000B3   207 _INT1	=	0x00b3
                           0000B4   208 _T0	=	0x00b4
                           0000B5   209 _T1	=	0x00b5
                           0000B6   210 _WR	=	0x00b6
                           0000B7   211 _RD	=	0x00b7
                           0000B8   212 _PX0	=	0x00b8
                           0000B9   213 _PT0	=	0x00b9
                           0000BA   214 _PX1	=	0x00ba
                           0000BB   215 _PT1	=	0x00bb
                           0000BC   216 _PS	=	0x00bc
                           0000D0   217 _P	=	0x00d0
                           0000D1   218 _F1	=	0x00d1
                           0000D2   219 _OV	=	0x00d2
                           0000D3   220 _RS0	=	0x00d3
                           0000D4   221 _RS1	=	0x00d4
                           0000D5   222 _F0	=	0x00d5
                           0000D6   223 _AC	=	0x00d6
                           0000D7   224 _CY	=	0x00d7
                                    225 ;--------------------------------------------------------
                                    226 ; overlayable register banks
                                    227 ;--------------------------------------------------------
                                    228 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        229 	.ds 8
                                    230 ;--------------------------------------------------------
                                    231 ; internal ram data
                                    232 ;--------------------------------------------------------
                                    233 	.area DSEG    (DATA)
                           00003D   234 _lcd_ready	=	0x003d
      000000                        235 _LCD_set_symbol_PARM_2:
      000000                        236 	.ds 3
                                    237 ;--------------------------------------------------------
                                    238 ; overlayable items in internal ram 
                                    239 ;--------------------------------------------------------
                                    240 	.area	OSEG    (OVR,DATA)
                                    241 ;--------------------------------------------------------
                                    242 ; indirectly addressable internal ram data
                                    243 ;--------------------------------------------------------
                                    244 	.area ISEG    (DATA)
                                    245 ;--------------------------------------------------------
                                    246 ; absolute internal ram data
                                    247 ;--------------------------------------------------------
                                    248 	.area IABS    (ABS,DATA)
                                    249 	.area IABS    (ABS,DATA)
                                    250 ;--------------------------------------------------------
                                    251 ; bit data
                                    252 ;--------------------------------------------------------
                                    253 	.area BSEG    (BIT)
                                    254 ;--------------------------------------------------------
                                    255 ; paged external ram data
                                    256 ;--------------------------------------------------------
                                    257 	.area PSEG    (PAG,XDATA)
                                    258 ;--------------------------------------------------------
                                    259 ; external ram data
                                    260 ;--------------------------------------------------------
                                    261 	.area XSEG    (XDATA)
                                    262 ;--------------------------------------------------------
                                    263 ; absolute external ram data
                                    264 ;--------------------------------------------------------
                                    265 	.area XABS    (ABS,XDATA)
                                    266 ;--------------------------------------------------------
                                    267 ; external initialized ram data
                                    268 ;--------------------------------------------------------
                                    269 	.area XISEG   (XDATA)
                                    270 	.area HOME    (CODE)
                                    271 	.area GSINIT0 (CODE)
                                    272 	.area GSINIT1 (CODE)
                                    273 	.area GSINIT2 (CODE)
                                    274 	.area GSINIT3 (CODE)
                                    275 	.area GSINIT4 (CODE)
                                    276 	.area GSINIT5 (CODE)
                                    277 	.area GSINIT  (CODE)
                                    278 	.area GSFINAL (CODE)
                                    279 	.area CSEG    (CODE)
                                    280 ;--------------------------------------------------------
                                    281 ; global & static initialisations
                                    282 ;--------------------------------------------------------
                                    283 	.area HOME    (CODE)
                                    284 	.area GSINIT  (CODE)
                                    285 	.area GSFINAL (CODE)
                                    286 	.area GSINIT  (CODE)
                                    287 ;--------------------------------------------------------
                                    288 ; Home
                                    289 ;--------------------------------------------------------
                                    290 	.area HOME    (CODE)
                                    291 	.area HOME    (CODE)
                                    292 ;--------------------------------------------------------
                                    293 ; code
                                    294 ;--------------------------------------------------------
                                    295 	.area CSEG    (CODE)
                                    296 ;------------------------------------------------------------
                                    297 ;Allocation info for local variables in function 'LCD_ready'
                                    298 ;------------------------------------------------------------
                                    299 ;	lcdlib.c:19: unsigned char LCD_ready(void) {
                                    300 ;	-----------------------------------------
                                    301 ;	 function LCD_ready
                                    302 ;	-----------------------------------------
      000000                        303 _LCD_ready:
                           000007   304 	ar7 = 0x07
                           000006   305 	ar6 = 0x06
                           000005   306 	ar5 = 0x05
                           000004   307 	ar4 = 0x04
                           000003   308 	ar3 = 0x03
                           000002   309 	ar2 = 0x02
                           000001   310 	ar1 = 0x01
                           000000   311 	ar0 = 0x00
                                    312 ;	lcdlib.c:20: return lcd_ready;
      000000 85 3D 82         [24]  313 	mov	dpl,_lcd_ready
                                    314 ;	lcdlib.c:21: }
      000003 22               [24]  315 	ret
                                    316 ;------------------------------------------------------------
                                    317 ;Allocation info for local variables in function 'LCD_Init'
                                    318 ;------------------------------------------------------------
                                    319 ;	lcdlib.c:23: void LCD_Init(void) {
                                    320 ;	-----------------------------------------
                                    321 ;	 function LCD_Init
                                    322 ;	-----------------------------------------
      000004                        323 _LCD_Init:
                                    324 ;	lcdlib.c:24: LCD_functionSet();
      000004 12r00r57         [24]  325 	lcall	_LCD_functionSet
                                    326 ;	lcdlib.c:25: LCD_entryModeSet(1, 1); /* increment and no shift */
      000007 75 82 07         [24]  327 	mov	dpl,#0x07
      00000A 12r00r35         [24]  328 	lcall	_LCD_IRWrite
                                    329 ;	lcdlib.c:26: LCD_displayOnOffControl(1, 1, 1); /* display on, cursor on and blinking on */
      00000D 75 82 0F         [24]  330 	mov	dpl,#0x0f
      000010 12r00r35         [24]  331 	lcall	_LCD_IRWrite
                                    332 ;	lcdlib.c:27: LCD_set_symbol(0x00, dinosaur); // bitmap for dinosaur starts at 0x10
      000013 75*00r00         [24]  333 	mov	_LCD_set_symbol_PARM_2,#_dinosaur
      000016 75*01s00         [24]  334 	mov	(_LCD_set_symbol_PARM_2 + 1),#(_dinosaur >> 8)
      000019 75*02 80         [24]  335 	mov	(_LCD_set_symbol_PARM_2 + 2),#0x80
      00001C 75 82 00         [24]  336 	mov	dpl,#0x00
      00001F 12r00rE4         [24]  337 	lcall	_LCD_set_symbol
                                    338 ;	lcdlib.c:28: LCD_set_symbol(0x08, cactus); // bitmap for cactus starts at 0x20
      000022 75*00r08         [24]  339 	mov	_LCD_set_symbol_PARM_2,#_cactus
      000025 75*01s00         [24]  340 	mov	(_LCD_set_symbol_PARM_2 + 1),#(_cactus >> 8)
      000028 75*02 80         [24]  341 	mov	(_LCD_set_symbol_PARM_2 + 2),#0x80
      00002B 75 82 08         [24]  342 	mov	dpl,#0x08
      00002E 12r00rE4         [24]  343 	lcall	_LCD_set_symbol
                                    344 ;	lcdlib.c:29: lcd_ready = 1;
      000031 75 3D 01         [24]  345 	mov	_lcd_ready,#0x01
                                    346 ;	lcdlib.c:30: }
      000034 22               [24]  347 	ret
                                    348 ;------------------------------------------------------------
                                    349 ;Allocation info for local variables in function 'LCD_IRWrite'
                                    350 ;------------------------------------------------------------
                                    351 ;c                         Allocated to registers r7 
                                    352 ;------------------------------------------------------------
                                    353 ;	lcdlib.c:32: void LCD_IRWrite(char c) {
                                    354 ;	-----------------------------------------
                                    355 ;	 function LCD_IRWrite
                                    356 ;	-----------------------------------------
      000035                        357 _LCD_IRWrite:
      000035 AF 82            [24]  358 	mov	r7,dpl
                                    359 ;	lcdlib.c:33: lcd_ready = 0;
      000037 75 3D 00         [24]  360 	mov	_lcd_ready,#0x00
                                    361 ;	lcdlib.c:34: DB = (c & 0xf0); // high nibble, keep RS low
      00003A 74 F0            [12]  362 	mov	a,#0xf0
      00003C 5F               [12]  363 	anl	a,r7
      00003D F5 90            [12]  364 	mov	_P1,a
                                    365 ;	lcdlib.c:35: E = 1; // pulse E
                                    366 ;	assignBit
      00003F D2 92            [12]  367 	setb	_P1_2
                                    368 ;	lcdlib.c:36: E = 0;
                                    369 ;	assignBit
      000041 C2 92            [12]  370 	clr	_P1_2
                                    371 ;	lcdlib.c:37: DB = (c << 4); // low nibble, keep RS low
      000043 EF               [12]  372 	mov	a,r7
      000044 C4               [12]  373 	swap	a
      000045 54 F0            [12]  374 	anl	a,#0xf0
      000047 F5 90            [12]  375 	mov	_P1,a
                                    376 ;	lcdlib.c:38: E = 1;
                                    377 ;	assignBit
      000049 D2 92            [12]  378 	setb	_P1_2
                                    379 ;	lcdlib.c:39: E = 0;
                                    380 ;	assignBit
      00004B C2 92            [12]  381 	clr	_P1_2
                                    382 ;	lcdlib.c:40: delay(DELAY_AMOUNT);
      00004D 75 82 28         [24]  383 	mov	dpl,#0x28
      000050 12r00rE0         [24]  384 	lcall	_delay
                                    385 ;	lcdlib.c:41: lcd_ready = 1;
      000053 75 3D 01         [24]  386 	mov	_lcd_ready,#0x01
                                    387 ;	lcdlib.c:42: }
      000056 22               [24]  388 	ret
                                    389 ;------------------------------------------------------------
                                    390 ;Allocation info for local variables in function 'LCD_functionSet'
                                    391 ;------------------------------------------------------------
                                    392 ;	lcdlib.c:44: void LCD_functionSet(void) {
                                    393 ;	-----------------------------------------
                                    394 ;	 function LCD_functionSet
                                    395 ;	-----------------------------------------
      000057                        396 _LCD_functionSet:
                                    397 ;	lcdlib.c:45: lcd_ready = 0;
      000057 75 3D 00         [24]  398 	mov	_lcd_ready,#0x00
                                    399 ;	lcdlib.c:48: DB = 0x20; // DB<7:4> = 0010, <RS,E,x,x>=0
      00005A 75 90 20         [24]  400 	mov	_P1,#0x20
                                    401 ;	lcdlib.c:49: E = 1;
                                    402 ;	assignBit
      00005D D2 92            [12]  403 	setb	_P1_2
                                    404 ;	lcdlib.c:50: E = 0;
                                    405 ;	assignBit
      00005F C2 92            [12]  406 	clr	_P1_2
                                    407 ;	lcdlib.c:51: delay(DELAY_AMOUNT);
      000061 75 82 28         [24]  408 	mov	dpl,#0x28
      000064 12r00rE0         [24]  409 	lcall	_delay
                                    410 ;	lcdlib.c:52: E = 1;
                                    411 ;	assignBit
      000067 D2 92            [12]  412 	setb	_P1_2
                                    413 ;	lcdlib.c:53: E = 0;
                                    414 ;	assignBit
      000069 C2 92            [12]  415 	clr	_P1_2
                                    416 ;	lcdlib.c:54: delay(DELAY_AMOUNT); // added, to ensure sufficient delay
      00006B 75 82 28         [24]  417 	mov	dpl,#0x28
      00006E 12r00rE0         [24]  418 	lcall	_delay
                                    419 ;	lcdlib.c:55: DB7 = 1; // 2-line model
                                    420 ;	assignBit
      000071 D2 97            [12]  421 	setb	_P1_7
                                    422 ;	lcdlib.c:57: E = 1;
                                    423 ;	assignBit
      000073 D2 92            [12]  424 	setb	_P1_2
                                    425 ;	lcdlib.c:58: E = 0;
                                    426 ;	assignBit
      000075 C2 92            [12]  427 	clr	_P1_2
                                    428 ;	lcdlib.c:59: delay(DELAY_AMOUNT);
      000077 75 82 28         [24]  429 	mov	dpl,#0x28
      00007A 12r00rE0         [24]  430 	lcall	_delay
                                    431 ;	lcdlib.c:60: lcd_ready = 1;
      00007D 75 3D 01         [24]  432 	mov	_lcd_ready,#0x01
                                    433 ;	lcdlib.c:61: }
      000080 22               [24]  434 	ret
                                    435 ;------------------------------------------------------------
                                    436 ;Allocation info for local variables in function 'LCD_write_char'
                                    437 ;------------------------------------------------------------
                                    438 ;c                         Allocated to registers r7 
                                    439 ;------------------------------------------------------------
                                    440 ;	lcdlib.c:63: void LCD_write_char(char c) {
                                    441 ;	-----------------------------------------
                                    442 ;	 function LCD_write_char
                                    443 ;	-----------------------------------------
      000081                        444 _LCD_write_char:
      000081 AF 82            [24]  445 	mov	r7,dpl
                                    446 ;	lcdlib.c:64: lcd_ready = 0;
      000083 75 3D 00         [24]  447 	mov	_lcd_ready,#0x00
                                    448 ;	lcdlib.c:65: DB = (c & 0xf0) | 0x08; //; keep the RS
      000086 74 F0            [12]  449 	mov	a,#0xf0
      000088 5F               [12]  450 	anl	a,r7
      000089 44 08            [12]  451 	orl	a,#0x08
      00008B F5 90            [12]  452 	mov	_P1,a
                                    453 ;	lcdlib.c:66: RS = 1;
                                    454 ;	assignBit
      00008D D2 93            [12]  455 	setb	_P1_3
                                    456 ;	lcdlib.c:67: E = 1;
                                    457 ;	assignBit
      00008F D2 92            [12]  458 	setb	_P1_2
                                    459 ;	lcdlib.c:68: E = 0;
                                    460 ;	assignBit
      000091 C2 92            [12]  461 	clr	_P1_2
                                    462 ;	lcdlib.c:69: DB = (c << 4) | 0x08; // keep the RS
      000093 EF               [12]  463 	mov	a,r7
      000094 C4               [12]  464 	swap	a
      000095 54 F0            [12]  465 	anl	a,#0xf0
      000097 FF               [12]  466 	mov	r7,a
      000098 74 08            [12]  467 	mov	a,#0x08
      00009A 4F               [12]  468 	orl	a,r7
      00009B F5 90            [12]  469 	mov	_P1,a
                                    470 ;	lcdlib.c:70: E = 1;
                                    471 ;	assignBit
      00009D D2 92            [12]  472 	setb	_P1_2
                                    473 ;	lcdlib.c:71: E = 0;
                                    474 ;	assignBit
      00009F C2 92            [12]  475 	clr	_P1_2
                                    476 ;	lcdlib.c:72: delay(DELAY_AMOUNT);
      0000A1 75 82 28         [24]  477 	mov	dpl,#0x28
      0000A4 12r00rE0         [24]  478 	lcall	_delay
                                    479 ;	lcdlib.c:73: lcd_ready = 1;
      0000A7 75 3D 01         [24]  480 	mov	_lcd_ready,#0x01
                                    481 ;	lcdlib.c:74: }
      0000AA 22               [24]  482 	ret
                                    483 ;------------------------------------------------------------
                                    484 ;Allocation info for local variables in function 'LCD_write_string'
                                    485 ;------------------------------------------------------------
                                    486 ;str                       Allocated to registers 
                                    487 ;------------------------------------------------------------
                                    488 ;	lcdlib.c:76: void LCD_write_string(char* str) {
                                    489 ;	-----------------------------------------
                                    490 ;	 function LCD_write_string
                                    491 ;	-----------------------------------------
      0000AB                        492 _LCD_write_string:
      0000AB AD 82            [24]  493 	mov	r5,dpl
      0000AD AE 83            [24]  494 	mov	r6,dph
      0000AF AF F0            [24]  495 	mov	r7,b
                                    496 ;	lcdlib.c:77: while (*str++) {
      0000B1                        497 00101$:
      0000B1 8D 82            [24]  498 	mov	dpl,r5
      0000B3 8E 83            [24]  499 	mov	dph,r6
      0000B5 8F F0            [24]  500 	mov	b,r7
      0000B7 12r00r00         [24]  501 	lcall	__gptrget
      0000BA FC               [12]  502 	mov	r4,a
      0000BB A3               [24]  503 	inc	dptr
      0000BC AD 82            [24]  504 	mov	r5,dpl
      0000BE AE 83            [24]  505 	mov	r6,dph
      0000C0 EC               [12]  506 	mov	a,r4
      0000C1 60 1C            [24]  507 	jz	00104$
                                    508 ;	lcdlib.c:78: LCD_write_char(*str);
      0000C3 8D 82            [24]  509 	mov	dpl,r5
      0000C5 8E 83            [24]  510 	mov	dph,r6
      0000C7 8F F0            [24]  511 	mov	b,r7
      0000C9 12r00r00         [24]  512 	lcall	__gptrget
      0000CC F5 82            [12]  513 	mov	dpl,a
      0000CE C0 07            [24]  514 	push	ar7
      0000D0 C0 06            [24]  515 	push	ar6
      0000D2 C0 05            [24]  516 	push	ar5
      0000D4 12r00r81         [24]  517 	lcall	_LCD_write_char
      0000D7 D0 05            [24]  518 	pop	ar5
      0000D9 D0 06            [24]  519 	pop	ar6
      0000DB D0 07            [24]  520 	pop	ar7
      0000DD 80 D2            [24]  521 	sjmp	00101$
      0000DF                        522 00104$:
                                    523 ;	lcdlib.c:80: }
      0000DF 22               [24]  524 	ret
                                    525 ;------------------------------------------------------------
                                    526 ;Allocation info for local variables in function 'delay'
                                    527 ;------------------------------------------------------------
                                    528 ;n                         Allocated to registers 
                                    529 ;------------------------------------------------------------
                                    530 ;	lcdlib.c:82: void delay(unsigned char n) {
                                    531 ;	-----------------------------------------
                                    532 ;	 function delay
                                    533 ;	-----------------------------------------
      0000E0                        534 _delay:
                                    535 ;	lcdlib.c:86: __endasm;
      0000E0                        536 	    dhere:
      0000E0 D5 82 FD         [24]  537 	djnz	dpl, dhere
                                    538 ;	lcdlib.c:88: }
      0000E3 22               [24]  539 	ret
                                    540 ;------------------------------------------------------------
                                    541 ;Allocation info for local variables in function 'LCD_set_symbol'
                                    542 ;------------------------------------------------------------
                                    543 ;symb                      Allocated with name '_LCD_set_symbol_PARM_2'
                                    544 ;code                      Allocated to registers r7 
                                    545 ;------------------------------------------------------------
                                    546 ;	lcdlib.c:90: void LCD_set_symbol(char code, const char symb[]) {
                                    547 ;	-----------------------------------------
                                    548 ;	 function LCD_set_symbol
                                    549 ;	-----------------------------------------
      0000E4                        550 _LCD_set_symbol:
      0000E4 AF 82            [24]  551 	mov	r7,dpl
                                    552 ;	lcdlib.c:93: LCD_setCgRamAddress(code); // code is the character generation memory
      0000E6 74 40            [12]  553 	mov	a,#0x40
      0000E8 4F               [12]  554 	orl	a,r7
      0000E9 F5 82            [12]  555 	mov	dpl,a
      0000EB 12r00r35         [24]  556 	lcall	_LCD_IRWrite
                                    557 ;	lcdlib.c:96: LCD_write_char(symb[0]);
      0000EE AD*00            [24]  558 	mov	r5,_LCD_set_symbol_PARM_2
      0000F0 AE*01            [24]  559 	mov	r6,(_LCD_set_symbol_PARM_2 + 1)
      0000F2 AF*02            [24]  560 	mov	r7,(_LCD_set_symbol_PARM_2 + 2)
      0000F4 8D 82            [24]  561 	mov	dpl,r5
      0000F6 8E 83            [24]  562 	mov	dph,r6
      0000F8 8F F0            [24]  563 	mov	b,r7
      0000FA 12r00r00         [24]  564 	lcall	__gptrget
      0000FD F5 82            [12]  565 	mov	dpl,a
      0000FF C0 07            [24]  566 	push	ar7
      000101 C0 06            [24]  567 	push	ar6
      000103 C0 05            [24]  568 	push	ar5
      000105 12r00r81         [24]  569 	lcall	_LCD_write_char
      000108 D0 05            [24]  570 	pop	ar5
      00010A D0 06            [24]  571 	pop	ar6
      00010C D0 07            [24]  572 	pop	ar7
                                    573 ;	lcdlib.c:97: LCD_write_char(symb[1]);
      00010E 74 01            [12]  574 	mov	a,#0x01
      000110 2D               [12]  575 	add	a,r5
      000111 FA               [12]  576 	mov	r2,a
      000112 E4               [12]  577 	clr	a
      000113 3E               [12]  578 	addc	a,r6
      000114 FB               [12]  579 	mov	r3,a
      000115 8F 04            [24]  580 	mov	ar4,r7
      000117 8A 82            [24]  581 	mov	dpl,r2
      000119 8B 83            [24]  582 	mov	dph,r3
      00011B 8C F0            [24]  583 	mov	b,r4
      00011D 12r00r00         [24]  584 	lcall	__gptrget
      000120 F5 82            [12]  585 	mov	dpl,a
      000122 C0 07            [24]  586 	push	ar7
      000124 C0 06            [24]  587 	push	ar6
      000126 C0 05            [24]  588 	push	ar5
      000128 12r00r81         [24]  589 	lcall	_LCD_write_char
      00012B D0 05            [24]  590 	pop	ar5
      00012D D0 06            [24]  591 	pop	ar6
      00012F D0 07            [24]  592 	pop	ar7
                                    593 ;	lcdlib.c:98: LCD_write_char(symb[2]);
      000131 74 02            [12]  594 	mov	a,#0x02
      000133 2D               [12]  595 	add	a,r5
      000134 FA               [12]  596 	mov	r2,a
      000135 E4               [12]  597 	clr	a
      000136 3E               [12]  598 	addc	a,r6
      000137 FB               [12]  599 	mov	r3,a
      000138 8F 04            [24]  600 	mov	ar4,r7
      00013A 8A 82            [24]  601 	mov	dpl,r2
      00013C 8B 83            [24]  602 	mov	dph,r3
      00013E 8C F0            [24]  603 	mov	b,r4
      000140 12r00r00         [24]  604 	lcall	__gptrget
      000143 F5 82            [12]  605 	mov	dpl,a
      000145 C0 07            [24]  606 	push	ar7
      000147 C0 06            [24]  607 	push	ar6
      000149 C0 05            [24]  608 	push	ar5
      00014B 12r00r81         [24]  609 	lcall	_LCD_write_char
      00014E D0 05            [24]  610 	pop	ar5
      000150 D0 06            [24]  611 	pop	ar6
      000152 D0 07            [24]  612 	pop	ar7
                                    613 ;	lcdlib.c:99: LCD_write_char(symb[3]);
      000154 74 03            [12]  614 	mov	a,#0x03
      000156 2D               [12]  615 	add	a,r5
      000157 FA               [12]  616 	mov	r2,a
      000158 E4               [12]  617 	clr	a
      000159 3E               [12]  618 	addc	a,r6
      00015A FB               [12]  619 	mov	r3,a
      00015B 8F 04            [24]  620 	mov	ar4,r7
      00015D 8A 82            [24]  621 	mov	dpl,r2
      00015F 8B 83            [24]  622 	mov	dph,r3
      000161 8C F0            [24]  623 	mov	b,r4
      000163 12r00r00         [24]  624 	lcall	__gptrget
      000166 F5 82            [12]  625 	mov	dpl,a
      000168 C0 07            [24]  626 	push	ar7
      00016A C0 06            [24]  627 	push	ar6
      00016C C0 05            [24]  628 	push	ar5
      00016E 12r00r81         [24]  629 	lcall	_LCD_write_char
      000171 D0 05            [24]  630 	pop	ar5
      000173 D0 06            [24]  631 	pop	ar6
      000175 D0 07            [24]  632 	pop	ar7
                                    633 ;	lcdlib.c:100: LCD_write_char(symb[4]);
      000177 74 04            [12]  634 	mov	a,#0x04
      000179 2D               [12]  635 	add	a,r5
      00017A FA               [12]  636 	mov	r2,a
      00017B E4               [12]  637 	clr	a
      00017C 3E               [12]  638 	addc	a,r6
      00017D FB               [12]  639 	mov	r3,a
      00017E 8F 04            [24]  640 	mov	ar4,r7
      000180 8A 82            [24]  641 	mov	dpl,r2
      000182 8B 83            [24]  642 	mov	dph,r3
      000184 8C F0            [24]  643 	mov	b,r4
      000186 12r00r00         [24]  644 	lcall	__gptrget
      000189 F5 82            [12]  645 	mov	dpl,a
      00018B C0 07            [24]  646 	push	ar7
      00018D C0 06            [24]  647 	push	ar6
      00018F C0 05            [24]  648 	push	ar5
      000191 12r00r81         [24]  649 	lcall	_LCD_write_char
      000194 D0 05            [24]  650 	pop	ar5
      000196 D0 06            [24]  651 	pop	ar6
      000198 D0 07            [24]  652 	pop	ar7
                                    653 ;	lcdlib.c:101: LCD_write_char(symb[5]);
      00019A 74 05            [12]  654 	mov	a,#0x05
      00019C 2D               [12]  655 	add	a,r5
      00019D FA               [12]  656 	mov	r2,a
      00019E E4               [12]  657 	clr	a
      00019F 3E               [12]  658 	addc	a,r6
      0001A0 FB               [12]  659 	mov	r3,a
      0001A1 8F 04            [24]  660 	mov	ar4,r7
      0001A3 8A 82            [24]  661 	mov	dpl,r2
      0001A5 8B 83            [24]  662 	mov	dph,r3
      0001A7 8C F0            [24]  663 	mov	b,r4
      0001A9 12r00r00         [24]  664 	lcall	__gptrget
      0001AC F5 82            [12]  665 	mov	dpl,a
      0001AE C0 07            [24]  666 	push	ar7
      0001B0 C0 06            [24]  667 	push	ar6
      0001B2 C0 05            [24]  668 	push	ar5
      0001B4 12r00r81         [24]  669 	lcall	_LCD_write_char
      0001B7 D0 05            [24]  670 	pop	ar5
      0001B9 D0 06            [24]  671 	pop	ar6
      0001BB D0 07            [24]  672 	pop	ar7
                                    673 ;	lcdlib.c:102: LCD_write_char(symb[6]);
      0001BD 74 06            [12]  674 	mov	a,#0x06
      0001BF 2D               [12]  675 	add	a,r5
      0001C0 FA               [12]  676 	mov	r2,a
      0001C1 E4               [12]  677 	clr	a
      0001C2 3E               [12]  678 	addc	a,r6
      0001C3 FB               [12]  679 	mov	r3,a
      0001C4 8F 04            [24]  680 	mov	ar4,r7
      0001C6 8A 82            [24]  681 	mov	dpl,r2
      0001C8 8B 83            [24]  682 	mov	dph,r3
      0001CA 8C F0            [24]  683 	mov	b,r4
      0001CC 12r00r00         [24]  684 	lcall	__gptrget
      0001CF F5 82            [12]  685 	mov	dpl,a
      0001D1 C0 07            [24]  686 	push	ar7
      0001D3 C0 06            [24]  687 	push	ar6
      0001D5 C0 05            [24]  688 	push	ar5
      0001D7 12r00r81         [24]  689 	lcall	_LCD_write_char
      0001DA D0 05            [24]  690 	pop	ar5
      0001DC D0 06            [24]  691 	pop	ar6
      0001DE D0 07            [24]  692 	pop	ar7
                                    693 ;	lcdlib.c:103: LCD_write_char(symb[7]);
      0001E0 74 07            [12]  694 	mov	a,#0x07
      0001E2 2D               [12]  695 	add	a,r5
      0001E3 FD               [12]  696 	mov	r5,a
      0001E4 E4               [12]  697 	clr	a
      0001E5 3E               [12]  698 	addc	a,r6
      0001E6 FE               [12]  699 	mov	r6,a
      0001E7 8D 82            [24]  700 	mov	dpl,r5
      0001E9 8E 83            [24]  701 	mov	dph,r6
      0001EB 8F F0            [24]  702 	mov	b,r7
      0001ED 12r00r00         [24]  703 	lcall	__gptrget
      0001F0 F5 82            [12]  704 	mov	dpl,a
                                    705 ;	lcdlib.c:106: }
      0001F2 02r00r81         [24]  706 	ljmp	_LCD_write_char
                                    707 	.area CSEG    (CODE)
                                    708 	.area CONST   (CODE)
      000000                        709 _dinosaur:
      000000 07                     710 	.db #0x07	; 7
      000001 05                     711 	.db #0x05	; 5
      000002 06                     712 	.db #0x06	; 6
      000003 07                     713 	.db #0x07	; 7
      000004 14                     714 	.db #0x14	; 20
      000005 17                     715 	.db #0x17	; 23
      000006 0E                     716 	.db #0x0e	; 14
      000007 0A                     717 	.db #0x0a	; 10
      000008                        718 _cactus:
      000008 04                     719 	.db #0x04	; 4
      000009 05                     720 	.db #0x05	; 5
      00000A 15                     721 	.db #0x15	; 21
      00000B 15                     722 	.db #0x15	; 21
      00000C 16                     723 	.db #0x16	; 22
      00000D 0C                     724 	.db #0x0c	; 12
      00000E 04                     725 	.db #0x04	; 4
      00000F 04                     726 	.db #0x04	; 4
                                    727 	.area XINIT   (CODE)
                                    728 	.area CABS    (ABS,CODE)
